using System; 

using Croc.Core; 

 

 

namespace Croc.Bpc.Sound 

{ 

    public interface ISoundManager : ISubsystem 

    { 

        #region ???????????? ???????? ? ????????? ???? 

 

 

        /// <summary> 

        /// ??? ????. ?????-???????? 

        /// </summary> 

        string StubSoundFileName { get; } 

 

 

        /// <summary> 

        /// ???? ? ?????, ? ??????? ????????? ???????? ????? 

        /// </summary> 

        string SoundsDirPath { get; } 

 

 

        #region ??????? ??????? ? ??? 

 

 

        /// <summary> 

        /// ?????????? ???? ? ????. ????? ??? ??????????????? ??????? ??????? ? ???????? ????? 

        /// </summary> 

        /// <param name="reverseReasonCode"></param> 

        /// <returns></returns> 

        string GetSoundForReverseReason(int reverseReasonCode); 

 

 

        /// <summary> 

        /// ???? ? ????. ????? "????????? ??????????????? ?????" 

        /// </summary> 

        string BadBulletinSound { get; } 

 

 

        /// <summary> 

        /// ???? ? ????. ????? "?????? ?? ??????????" 

        /// </summary> 

        string StampNotRecognizedSound { get; } 

 

 

        /// <summary> 

        /// ?????????? ???? ? ????. ?????? ??? ??????????????? ????? 

        /// "????????? ??????????????? ?????. [??????? ???]" 

        /// </summary> 


        /// <param name="badBulletinReasonCode">??? ??????? ???</param> 

        /// <param name="badStampReasonCode">?????????? ??? ??????? ???, ????? ??? ??-?? ??????</param> 

        /// <returns></returns> 

        string[] GetSoundsForBadBulletinReason(string badBulletinReasonCode, string badStampReasonCode); 

 

 

        /// <summary> 

        /// ????? ??????? ??? 

        /// </summary> 

        /// <param name="badBulletinReason">????????? ????????????? ???????????? BadBulletinReason</param> 

        /// <returns>??????? ???</returns> 

        string GetTextForBadBulletinReason(string badBulletinReason); 

 

 

        #endregion 

 

 

        #region ????? 

 

 

        /// <summary> 

        /// ?????????? ???? ? ????. ??????, ??????? ??? ???????????????? ??????????????? 

        /// ?????????? ???????? ????? 

        /// </summary> 

        /// <param name="number"></param> 

        /// <param name="useFeminine">???????????? ?? ??????? ???,  

        /// ?.?. ???? true, ?? 1=????, 2=???, ????? 1=????, 2=???</param> 

        /// <param name="declension">?????????</param> 

        /// <returns></returns> 

        string[] GetSoundForNumber(int number, bool useFeminine, NumberDeclension declension); 

 

 

        #endregion 

 

 

        #region ???? 

 

 

        /// <summary> 

        /// ?????????? ???? ? ????. ??????, ??????? ??? ???????????????? ??????????????? 

        /// ?????????? ???????? ???-?? ?????, ???????? "1 ???", "12 ?????" 

        /// </summary> 

        /// <param name="hours"></param> 

        /// <returns></returns> 

        string[] GetSoundForHours(int hours); 

        /// <summary> 

        /// ?????????? ????? ??? ??????????? ????????? ???-?? ?????, ???????? "1 ???", "12 ?????" 

        /// </summary> 

        /// <param name="hours"></param> 

        /// <returns></returns> 


        string GetTextForHours(int hours); 

 

 

        #endregion 

 

 

        #region ?????? 

 

 

        /// <summary> 

        /// ?????????? ???? ? ????. ??????, ??????? ??? ???????????????? ??????????????? 

        /// ?????????? ???????? ???-?? ?????, ???????? "1 ??????", "3 ??????", "30 ?????" 

        /// </summary> 

        /// <param name="minutes"></param> 

        /// <returns></returns> 

        string[] GetSoundForMinutes(int minutes); 

        /// <summary> 

        /// ?????????? ????? ??? ??????????? ????????? ???-?? ?????, ???????? "1 ??????", "3 ??????", "30 ?????" 

        /// </summary> 

        /// <param name="minutes"></param> 

        /// <returns></returns> 

        string GetTextForMinutes(int minutes); 

 

 

        #endregion 

 

 

        #region ??? 

 

 

        /// <summary> 

        /// ?????????? ???? ? ????. ??????, ??????? ??? ???????????????? ??????????????? 

        /// ?????????? ???????? ???-?? ????, ???????? "1 ????", "3 ???", "30 ????" 

        /// </summary> 

        /// <param name="days"></param> 

        /// <returns></returns> 

        string[] GetSoundForDays(int days); 

        /// <summary> 

        /// ?????????? ????? ??? ??????????? ????????? ???-?? ????, ???????? "1 ????", "3 ???", "30 ????" 

        /// </summary> 

        /// <param name="minutes"></param> 

        /// <returns></returns> 

        string GetTextForDays(int days); 

 

 

        #endregion 

 

 

        #region ???? (???? ????? ???) 

 


 
        /// <summary> 

        /// ?????????? ???? ? ????. ??????, ??????? ??? ???????????????? ??????????????? 

        /// ?????????? ????? ??? ? ??????, ???????? "??????", "???????? ?????" 

        /// </summary> 

        /// <param name="dayNumber">????? ??? (?? 1 ?? 31)</param> 

        /// <returns></returns> 

        string[] GetSoundForDayInMonth(int dayNumber); 

        /// <summary> 

        /// ?????????? ???? ? ????. ?????, ??????? ?????????? ???????? ??????  

        /// ? ??????????? ??????, ???????? "?????", "????" 

        /// </summary> 

        /// <param name="monthNumber">????? ?????? (?? 1 ?? 12)</param> 

        /// <returns></returns> 

        string GetSoundForMonth(int monthNumber); 

        /// <summary> 

        /// ?????????? ???? ? ????. ??????, ??????? ??? ???????????????? ??????????????? 

        /// ?????????? ????? ???? ? ??????????? ??????, ???????? "1945-???", "2010-???" 

        /// </summary> 

        /// <param name="yearNumber"></param> 

        /// <returns></returns> 

        string[] GetSoundForYear(int yearNumber); 

 

 

        #endregion 

 

 

        #region ????? 

 

 

        /// <summary> 

        /// ?????????? ???? ? ????. ????? ??? ??????????????? ?????  

        /// </summary> 

        /// <param name="letter"></param> 

        /// <returns></returns> 

        string GetSoundForLetter(char letter); 

 

 

        #endregion 

 

 

        #endregion 

 

 

        #region ??????????????? ???? 

 

 

        /// <summary> 

        /// ????????????? ???????? ????? 

        /// </summary> 


        /// <param name="soundFiles">?????? ????? ? ???????? ??????</param> 

        /// <param name="playingFinishedCallback">?????????? ??????? ?????????? ???????????????. 

        /// ????? ?????? ??????, ???? ??????????????? ??????????? ??????????????, ? ?? ? ?????????? 

        /// ?????? ?????? StopPlaying ??? PlaySounds (??????????) 

        /// </param> 

        void PlaySounds(string[] soundFiles, EventHandler playingFinishedCallback); 

 

 

        /// <summary> 

        /// ?????????? ????? ?????????? ??????????????? ???????? ?????? 

        /// </summary> 

        void StopPlaying(); 

 

 

        #endregion 

    } 

}


