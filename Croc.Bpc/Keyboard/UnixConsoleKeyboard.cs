using System; 

using System.Threading; 

using System.Runtime.InteropServices; 

using Croc.Bpc.Common.Diagnostics; 

 

 

 

 

namespace Croc.Bpc.Keyboard 

{ 

	/// <summary> 

	/// ?????????? ??? ?????????? ?????????? Unix-??????????? 

	/// </summary> 

    public class UnixConsoleKeyboard : BaseKeyboard 

	{ 

        /// <summary> 

        /// ???? ??????, ??????? ??? ????????? 

        /// </summary> 

        private const int DATA_READY = 1; 

        /// <summary> 

        /// ??? ??????, ????????? ??? ????????? 

        /// </summary> 

        private const int DATA_NOT_READY = 0;        

 

 

		/// <summary> 

        /// ????? ?????? ???????????? ?????? ????? ??????? 

		/// </summary> 

        protected override void WatcherMethod() 

		{ 

            // ????????????? ?????????? ??? ????????? ????????? 

            KeyboardProvider((int)_type); 

 

 

            while (!_disposed) 

            { 

                // ???????? ??????? ?????????? 

                byte scanCode = 0; 

                int timeStamp = 0; 

 

 

                if (getAll(ref scanCode, ref timeStamp) == DATA_READY && !_disposed) 

                    OnNewDataReady(scanCode, timeStamp); 

            } 

		} 

 

 

        /// <summary> 

        /// ??????????? ?????????? 

        /// </summary> 


        public override void Dispose() 

        { 

            base.Dispose(); 

            // ?????????? ??????? 

            closeAll(); 

        } 

 

 

        #region KeyboardProvider extern methods 

 

 

        /// <summary> 

		/// ????????????? ?????? ??????? ??? ?????? ????????? ??????????.  

		/// </summary> 

		/// <param name="KeyboardType">??? ??????????</param> 

		[DllImport("KeyboardProvider.dll")]  

		private static extern void KeyboardProvider(int keyboardType); 

		/// <summary> 

		/// ?????????? ??????? ? ?????????????? ????????? 

		/// </summary> 

		[DllImport("KeyboardProvider.dll")]  

		private static extern void closeAll(); 

		/// <summary> 

		/// ???????? ??????? ?? ??????????  

		/// </summary> 

		/// <param name="ScanCode">???? ??? ???????</param> 

		/// <param name="Time">????? ??????? ???????</param> 

		[DllImport("KeyboardProvider.dll")]  

		private static extern int getAll(ref byte scanCode, ref int time); 

 

 

        #endregion 

    } 

}


