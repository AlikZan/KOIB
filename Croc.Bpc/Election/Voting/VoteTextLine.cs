using System; 

using System.Xml.Serialization; 

 

 

namespace Croc.Bpc.Election.Voting 

{ 

	/// <summary> 

	/// ???????????? - ????? ??? ??????? VoteTextLine 

	/// ?????????? ?????????????? ???????? ?????? ?????????  

	/// ? ????????? ??? ?????? ????????? 

	/// </summary> 

	public enum VoteLineType 

	{ 

		/// <summary> 

		/// ?????? ????????? 

		/// </summary> 

		Vote, 

 

 

		/// <summary> 

		/// ?????? ?????????  

		/// </summary> 

		Line, 

 

 

		/// <summary> 

		/// ??????-??????????? 

		/// </summary> 

		Delimiter, 

	} 

 

 

	/// <summary> 

	/// ?????, ?????????? ???????? ??????????? ????????? ??? ?????? ?????????  

	/// ? ???????? ??? ??????????????? ?????????? 

	/// </summary> 

	[Serializable, XmlType("Vote")] 

	public class VoteTextLine 

	{ 

		/// <summary> 

		/// ???????? ??? ?????????? ?????? ??????? 

		/// </summary> 

		[XmlAttribute("bold")] 

		public bool Bold 

		{ 

			get; 

			set; 

		} 

 

 


		/// <summary> 

		/// ???????? ??? ????????? ??????? 

		/// </summary> 

		[XmlAttribute("italic")] 

		public bool Italic 

		{ 

			get; 

			set; 

		} 

 

 

		/// <summary> 

		/// ???????? ??? ????????? ??????? ?????? 

		/// </summary> 

		[XmlAttribute("fontSize")] 

		public int FontSize 

		{ 

			get; 

			set; 

		} 

 

 

		/// <summary> 

		///	????????????? ????????? 

		/// </summary> 

		[XmlAttribute("ID")] 

		public string ID; 

 

 

		/// <summary> 

		/// ??? ??????? VoteTextLine 

		/// </summary> 

		[XmlAttribute("type")] 

		public VoteLineType Type; 

 

 

		/// <summary> 

		/// ????????? ????????????? ??????? 

		/// </summary> 

		/// <returns>????????? ????????????? ???????</returns> 

		public override string ToString() 

		{ 

			return	"[m_bBold=" + Bold.ToString() + ";" + 

					"m_bItalic=" + Italic.ToString() + ";" +  

					"m_nFontSize=" + FontSize.ToString() + ";" +  

					"m_sID=" + ID + ";]"; 

		} 

	} 

}


