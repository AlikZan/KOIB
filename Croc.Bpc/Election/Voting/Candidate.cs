using System; 

using System.Xml.Serialization; 

using System.Text; 

 

 

namespace Croc.Bpc.Election.Voting 

{ 

	/// <summary> 

	/// ???????? 

	/// </summary> 

	[Serializable, XmlType("Candidate")] 

	public class Candidate 

	{ 

		/// <summary> 

		/// ??????? 

		/// </summary> 

        [XmlAttribute("lastName")] 

        public string LastName; 

		/// <summary> 

		/// ??? 

		/// </summary> 

        [XmlAttribute("firstName")] 

        public string FirstName; 

		/// <summary> 

		/// ???????? 

		/// </summary> 

        [XmlAttribute("patronymic")] 

        public string Patronymic; 

		/// <summary> 

		/// ???????? ??????????????? ? ????? ???????? ?? ????????? 

		/// </summary> 

        [XmlAttribute("registered")] 

        public bool Registered; 

		/// <summary> 

		/// ???????? ???? ? ??????????? (? ???????? ??????) 

		/// </summary> 

        [XmlAttribute("disabled")] 

        public bool DisabledInSourceData; 

		/// <summary> 

		/// ???????? ???? ? ??????????? ?? ??? 

		/// </summary> 

		[XmlAttribute("disabledLocally")] 

		public bool DisabledLocally = false; 

		/// <summary> 

		/// ?????????? ????? ????????? 

		/// </summary> 

        [XmlAttribute("num")] 

        public int Number; 

		/// <summary> 

		/// ????????? ????????? (?? ?????????) 


		/// </summary> 

        [XmlAttribute("biography")] 

        public string Biography; 

		/// <summary> 

		/// ??????? ?????????????? 

		/// </summary> 

        [XmlAttribute("selfRegistered")] 

        public bool SelfRegistered; 

		/// <summary> 

		/// ???????? ? ???????????? ?????? 

		/// </summary> 

        [XmlAttribute("party")] 

        public string Party; 

		/// <summary> 

		///	????????????? ????????? 

		/// </summary> 

		[XmlAttribute("id")] 

		public string Id; 

		/// <summary> 

		/// ??????? ?????????? ????????? "?????? ????" 

		/// </summary> 

        [XmlAttribute("noneAbove")] 

        public bool NoneAbove = false; 

 

 

 

 

        /// <summary> 

        /// ???????? ???? ? ??????????? ?? ??? ??? ? ?? 

        /// </summary> 

        [XmlIgnore] 

        public bool Disabled 

        { 

            get 

            { 

                return DisabledInSourceData || DisabledLocally; 

            } 

            set 

            { 

                DisabledLocally = value; 

            } 

        } 

 

 

		/// <summary> 

		///		?????????? ???????? ????????? ? ???? &lt;?????????? ?????&gt;. (????) &lt;??????? ??? ????????&gt; 

		///		????? ????? "(????)" ??????????, ???????? ?????????? 

		/// </summary> 

		/// <param name="bShowCancel">??????? ?????????? ????? "(????)" ??? ?????? ??????????</param> 

		/// <returns> 


		///		string - ?????????? ???????? ????????? 

		/// </returns> 

		public string CandDescr(bool bShowCancel) 

		{ 

			StringBuilder sStr = new StringBuilder(); 

 

 

			sStr.Append(Number.ToString() + ". " + GetFIO(true)); 

			if(bShowCancel && Disabled) 

			{ 

				if (Disabled) 

					sStr.Append(" (??????? ?????)"); 

				else if (DisabledLocally) 

					sStr.Append(" (??????? ????? ?? ???)"); 

			} 

 

 

			return sStr.ToString(); 

		} 

 

 

		/// <summary> 

		///		?????????? ???????? ????????? ? ???? &lt;??????? ??? ????????&gt; 

		/// </summary> 

		/// <param name="bUpper">?????????? ??????? ? ??????? ???????</param> 

		/// <returns></returns> 

		public string GetFIO(bool bUpper) 

		{ 

			StringBuilder sStr = new StringBuilder(); 

 

 

			if(0 < LastName.Length) sStr.Append(bUpper?LastName.ToString().ToUpper():LastName.ToString()); 

			if(0 < FirstName.Length) sStr.Append(" " + FirstName.ToString()); 

			if(0 < Patronymic.Length) sStr.Append(" " + Patronymic.ToString()); 

 

 

			return sStr.ToString(); 

		} 

 

 

        /// <summary> 

        /// ????? ??? ???????????? ????? ????????? ? ??????? "??????? ?.?". 

        /// </summary> 

        /// <returns>??? ? ??????? "??????? ?.?"</returns> 

        public string GetFIOShort() 

        { 

            string sCandName = LastName != null ? LastName : ""; 

 

 

            if(FirstName != null && FirstName.Trim() != "")  


            { 

                sCandName += " " + FirstName[0] + "."; 

 

 

                if(Patronymic != null && Patronymic.Trim() != "")  

                { 

                    sCandName += Patronymic[0] + "."; 

                } 

            } 

 

 

            return sCandName; 

        } 

 

 

		/// <summary> 

		/// ?????????? ????????? ????????????? ??????? 

		/// </summary> 

		/// <returns></returns> 

		public override string ToString() 

		{ 

			StringBuilder sText = new StringBuilder(); 

 

 

			// ????????? ?????? 

			sText.Append("["); 

			// ????????? ??????? 

			sText.Append("LastName=" + LastName + ";"); 

			// ????????? ??? 

			sText.Append("FirstName=" + FirstName + ";"); 

			// ????????? ???????? 

			sText.Append("Patronymic=" + Patronymic + ";"); 

			// ????????? ????, ??? ???????? ??????????????? ? ????? ???????? ?? ????????? 

			sText.Append("Registered=" + Registered.ToString() + ";"); 

			// ????????? ????, ??? ???????? ???? ? ??????????? (? ???????? ??????) 

			sText.Append("Disabled=" + Disabled.ToString() + ";"); 

			// ????????? ????, ??? ???????? ???? ? ??????????? ?? ??? 

			sText.Append("DisabledLocally=" + DisabledLocally.ToString() + ";"); 

			// ????????? ?????????? ????? ????????? 

			sText.Append("Num=" + Number.ToString() + ";"); 

			// ????????? ????????? ????????? 

			sText.Append("Biography=" + Biography + ";"); 

			// ????????? ??????? ?????????????? 

			sText.Append("SelfRegistered=" + SelfRegistered.ToString() + ";"); 

			// ????????? ???????? ? ???????????? ?????? 

			sText.Append("Party=" + Party + ";"); 

			// ????????? ????????????? ????????? 

			sText.Append("ID=" + Id + ";"); 

			// ????????? ??????? ????????? ?????? ???? 

			sText.Append("NoneAbove=" + NoneAbove.ToString()); 


			// ????????? ??????????? ?????? 

			sText.Append("]"); 

			return sText.ToString(); 

		} 

	} 

}


