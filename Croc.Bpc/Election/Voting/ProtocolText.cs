using System; 

using System.Text; 

using System.Xml.Serialization; 

 

 

namespace Croc.Bpc.Election.Voting 

{ 

	/// <summary> 

	/// ?????, ??????????? ????? ????????? 

	/// </summary> 

	[Serializable, XmlType("Text")] 

	public class ProtocolText 

	{ 

        /// <summary> 

        /// ?????? ???????? ?????????? ? ????? ????????? 

        /// </summary> 

        [XmlArray("Table")] 

        [XmlArrayItem("VoteLine")] 

        public VoteTextLine[] m_aVoteLines = new VoteTextLine[0]; 

 

 

        /// <summary> 

		/// ?????? ????? ????????? 

		/// </summary> 

		[XmlArray("ProtocolLines")] 

		[XmlArrayItem("ProtocolLine")] 

		public ProtocolTextLine[] m_aProtocolLines = new ProtocolTextLine[0]; 

 

 

		/// <summary> 

		/// ???? ????????????? ???????? ??? ???????????? ????????? ????????? 

		/// </summary> 

		private bool m_bFinal = false; 

 

 

		/// <summary> 

		/// ???????? ??? ?????????? ????????? m_bFinal 

		/// </summary> 

		[XmlAttribute("final")] 

		public bool Final 

		{ 

			get {return m_bFinal;} 

			set {m_bFinal = value;} 

		} 

 

 

		/// <summary> 

		/// ?????????? ????????? ???????????? ??????? 

		/// </summary> 

		/// <returns></returns> 


		public override string ToString() 

		{ 

			StringBuilder sText = new StringBuilder(); 

			sText.Append('['); 

			if(m_aProtocolLines != null) 

			{ 

				sText.Append("m_aProtocolLines=["); 

				foreach(ProtocolTextLine oLine in m_aProtocolLines) 

				{ 

                    sText.Append(oLine); 

                    sText.Append(';'); 

				} 

				sText.Append(']'); 

			} 

 

 

			if(m_aVoteLines != null) 

			{ 

				sText.Append("m_aVoteLines=["); 

				foreach(VoteTextLine oVoteLine in m_aVoteLines) 

				{ 

					sText.Append(oVoteLine); 

                    sText.Append(';'); 

				} 

				sText.Append("];"); 

			} 

 

 

			sText.Append("m_bFinal="); 

            sText.Append(m_bFinal); 

            sText.Append(";]"); 

 

 

			return sText.ToString(); 

		} 

	} 

}


