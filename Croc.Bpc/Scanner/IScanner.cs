using System; 

using Croc.Bpc.Common; 

using Croc.Bpc.Common.Images; 

 

 

namespace Croc.Bpc.Scanner 

{ 

	/// <summary> 

	/// ????????? ??? ?????? ?? ???????? 

	/// </summary> 

	public interface IScanner : IDisposable 

	{ 

        /// <summary> 

        /// IP ????? ??????? 

        /// </summary> 

        string IPAddress 

        { 

            get; 

        } 

 

 

        /// <summary> 

        /// ???????? ????? ??????? 

        /// </summary> 

        string SerialNumber 

        { 

            get; 

        } 

 

 

        /// <summary> 

        /// ?????? ???????? ??????? 

        /// </summary> 

        int DriverVersion 

        { 

            get; 

        } 

 

 

        /// <summary> 

        /// ?????? ??????? 

        /// </summary> 

        ScannerVersion Version 

        { 

            get; 

        } 

 

 

        /// <summary> 

        /// ?????? ??????? 


        /// </summary> 

        int Status 

        { 

            get; 

        } 

 

 

        /// <summary> 

        /// ????? ????? ? ???? 

        /// </summary> 

        /// <param name="sheetIssue">??? ?????????? (????? ????????)</param> 

        /// <returns>????????? ?????????? ???????</returns> 

        DropResult Drop(short sheetIssue); 

 

 

		/// <summary> 

		/// ???????? ??????????? ????? 

		/// </summary> 

		/// <param name="side">???????</param> 

		/// <param name="x">?????????? x ??????-???????? ????</param> 

		/// <param name="y">?????????? y ??????-???????? ????</param> 

		/// <param name="w">?????? ? ?????? ?????????? ???????</param> 

		/// <param name="h">?????? ? ?????? ?????????? ???????</param> 

		/// <param name="iMemory">????? ??????? ???????</param> 

		/// <param name="nID">????????????? ??????</param> 

		void GetHalftoneBuffer(ScannedSide side, short x, short y, short w, short h, MemoryBlock iMemory, out short nID); 

 

 

        /// <summary> 

        /// ????? ?????????? (??????? ??????????? ???????? ?? ??? ????? ??????????) 

        /// </summary> 

        int IndicatorLength { get; } 

 

 

        /// <summary> 

        /// ????? ?????? ?? ????????? 

        /// </summary> 

        /// <param name="str">?????? ??? ???????????</param> 

        void SetIndicator(string str); 

 

 

        /// <summary> 

        /// ?????????? ??????? 

        /// </summary> 

        int MotorCount { get; } 

 

 

        /// <summary> 

        /// ?????????? ???????? 

        /// </summary> 


        /// <param name="number">1 - ?????? ????? 2 - ?????? ????? 3 - ??? ??????</param> 

        /// <param name="enable">true - ????????, false - ?????????</param> 

        /// <param name="dir">??????????? ???????? ???????</param> 

        /// <param name="step">?????????? ?????</param> 

        void Motor(short number, bool enable, int dir, int step); 

 

 

        /// <summary> 

        /// ???????? ?????? ? ??????? ???????? ???????? ???? ?????  

        /// ?? ?????? ???? ??????. ??? ?????? ?????? ?????????  

        /// ???????? ???????????? ???????? 

        /// </summary> 

        /// <param name="width">?????????? ?????? ?????????</param> 

        /// <param name="max_offset">???????????? ???????? ?? ????? ???????</param> 

        /// <returns></returns> 

        int PageOffset_AddItem(int width, int max_offset); 

 

 

        /// <summary> 

        /// ???????? ??????? ???????? ???????? ????  

        /// ????? ?? ?????? ???? ?????? 

        /// </summary> 

        /// <returns></returns> 

        void PageOffset_ClearAll(); 

 

 

        /// <summary> 

        /// ??????? ?????? ?? ??????? ???????? ????????  

        /// ???? ????? ?? ?????? ???? ??????.  

        /// </summary> 

        /// <param name="itemID">????? ?????? ? ???????</param> 

        void PageOffset_ClearItem(int itemID); 

 

 

        /// <summary> 

        /// ??????? ??????? ????? 

        /// </summary> 

        ReverseCommandResult Reverse(); 

 

 

        /// <summary> 

        /// ?????????? ?????????? ??????? ??????? 

        /// </summary> 

        /// <param name="pEvent">?????? ?? ??????, ?????????? ???????</param> 

        void SetEventsHandler(IScannerEventHandler pEvent); 

 

 

        /// <summary> 

        /// ?????????? ?????????? ? ??????? ??????? (????????) ???? ?????. 

        /// </summary> 


        /// <param name="side">???????</param> 

        /// <param name="x">????? ?????</param> 

        /// <param name="y">??????? ?????</param> 

        void SetWorkZone(ScannedSide side, short x, short y); 

 

 

        /// <summary> 

        /// ???????? ??????? ????????? ???????.		 

        /// TestMarker (short iSheetIssue) 

        /// 			iSheetIssue: 

        /// 				1 ? ?????????? 1 

        /// 				2 ? ?????????? 2 

        /// 				3 ? ?????????? 3 

        /// </summary> 

        /// <param name="SheetIssue"></param> 

        void TestMarker(short SheetIssue); 

 

 

        /// <summary> 

        /// ???????? ?????? ? ??????? ???????? ???? ??????????. 

        /// ??? ?????? ?????? ????????? ???????? ??????????? ? 

        /// ???????????? ????? ?????. itemID ? ????? ?????? ? ???????. 

        /// </summary> 

        /// <param name="width">?????????? ??????</param> 

        /// <param name="min_length">?????????? ?????????? ?????</param> 

        /// <param name="max_length">??????????? ?????????? ?????</param> 

        /// <returns></returns> 

        int ValidLength_AddItem(int width, int min_length, int max_length); 

 

 

        /// <summary> 

        /// ???????? ??????? ???????? ???? ?????????? 

        /// </summary> 

        void ValidLength_ClearAll(); 

 

 

        /// <summary> 

        /// ??????? ??????? ?? ??????? ?????????? ???? 

        /// </summary> 

        /// <param name="itemID">????? ????????? ???????</param> 

        void ValidLength_ClearItem(int itemID); 

 

 

        /// <summary> 

        /// ????? ??????????? ??????? ??????? 

        /// </summary> 

        short BinaryThresholdTop 

        { 

            get; 

            set; 


        } 

 

 

        /// <summary> 

        /// ????? ??????????? ?????? ??????? 

        /// </summary> 

        short BinaryThresholdBottom 

        { 

            get; 

            set; 

        } 

 

 

        /// <summary> 

        /// ????? ??????????? ??????? ??????? 

        /// ( ? ?????? ????????? ) 

        /// </summary> 

        short CurrentBinaryThresholdTop 

        { 

            get; 

        } 

 

 

        /// <summary> 

        /// ????? ??????????? ?????? ??????? 

        /// ( ? ?????? ????????? ) 

        /// </summary> 

        short CurrentBinaryThresholdBottom 

        { 

            get; 

        } 

 

 

        /// <summary> 

        /// ?????????? ??????? ??????? ?? X 

        /// </summary> 

        short DpiXTop 

        { 

            get; 

            set; 

        } 

 

 

        /// <summary> 

        /// ?????????? ?????? ??????? ?? X 

        /// </summary> 

        short DpiXBottom 

        { 

            get; 

            set; 


        } 

 

 

        /// <summary> 

        /// ?????????? ??????? ??????? ?? Y 

        /// </summary> 

        short DpiYTop 

        { 

            get; 

            set; 

        } 

 

 

        /// <summary> 

        /// ?????????? ?????? ??????? ?? Y 

        /// </summary> 

        short DpiYBottom 

        { 

            get; 

            set; 

        } 

 

 

        /// <summary> 

        /// ????????/????????? ???????????? ??? ????? ??????? 

        /// <param name="enable">true - ??? ????? ????????, false - ??? ????? ?????????</param> 

		/// </summary> 

        void EnableLamps(bool enable); 

 

 

        /// <summary> 

        /// ??????? ?? ?????? 

        /// </summary> 

        bool Marker 

        { 

            get; 

            set; 

        } 

 

 

        /// <summary> 

        /// ???????? ?? ?????? ??????? 

        /// </summary> 

        bool MarkerWork 

        { 

            get; 

            set; 

        } 

 

 


        /// <summary> 

        /// ??????????? ?????????? ????? ????? 

        /// </summary> 

        short MaxSheetLength 

        { 

            get; 

            set; 

        } 

 

 

        /// <summary> 

        /// ?????????? ?????????? ????? ????? 

        /// </summary> 

        short MinSheetLength 

        { 

            get; 

            set; 

        } 

 

 

        /// <summary> 

        /// ?????????? ??????? ????,  

        /// ??? ? ?????? ?????? ??????????? ???? 

        /// </summary> 

        bool SheetScanning 

        { 

            get; 

        } 

 

 

        /// <summary> 

        /// ??????? ?? ????? ????????? ?? ??????? ????? 

        /// </summary> 

        bool TuningEnabled 

        { 

            get; 

            set; 

        } 

 

 

        /// <summary> 

        /// ??????? ?? ????? ???????? ????? ????????? 

        /// </summary> 

        bool LengthValidationEnabled 

        { 

            get; 

            set; 

        } 

 

 


        /// <summary> 

        /// ????? ????????? ??????????? ?? ????????????? ?????? 

        /// </summary> 

        int WhiteCoeff 

        { 

            get; 

            set; 

        } 

 

 

        /// <summary> 

        /// ??????? ????? ??????? ??????? 

        /// </summary> 

        MemoryBlock WorkBufferTop 

        { 

            get; 

        } 

 

 

        /// <summary> 

        /// ??????? ????? ?????? ??????? 

        /// </summary> 

        MemoryBlock WorkBufferBottom 

        { 

            get; 

        } 

 

 

        /// <summary> 

        /// ????????? (????????) ?? ???????????? 

        /// </summary> 

        bool ScanningEnabled 

        { 

            get; 

            set; 

        } 

 

 

        /// <summary> 

        /// ?????? ??????? ???? 

        /// </summary> 

        int WorkZoneH 

        { 

            get; 

        } 

 

 

        /// <summary> 

        /// ?????? ??????? ???? 

        /// </summary> 


        int WorkZoneW 

        { 

            get; 

        } 

 

 

        /// <summary> 

        /// ????? ????????? ????????, ??????? ????? ???????? ?? ?????? 

        /// ?????? ? ??????? ?????? ???????? 

        /// </summary> 

        /// <param name="str">????? ????????</param> 

        void ScanningIndicatorMessage(string str); 

 

 

        /// <summary> 

        /// ??????? ?? ????? ??????????? ????? ?? CIS 

        /// </summary> 

        bool DirtDetectionEnabled 

        { 

            get; 

            set; 

        } 

 

 

        /// <summary> 

        /// ????????? ??????????? ?????? ? ???? 

        /// </summary> 

        /// <param name="fileName">??? ?????</param> 

        /// <param name="imageType">??? ???????????? ???????????</param> 

        /// <param name="side">???????, ??????? ????? ?????????. ???? Undefined - ?????? ???</param> 

        /// <param name="bufferSize">?????? ???????????? ??????</param> 

        /// <returns>true - ?????????? ?????? ???????; false - ?????? ??????????</returns> 

        bool SaveBuffer(string fileName, ImageType imageType, ScannedSide side, BufferSize bufferSize); 

 

 

        /// <summary> 

        /// ?????? ?????? ??????????? 

        /// </summary> 

        /// <param name="imageType">??? ???????????? ???????????</param> 

        /// <param name="bufferSize">?????? ???????????? ??????</param> 

        /// <returns>?????? ?????? ???????????</returns> 

        long GetBufferSize(ImageType imageType, BufferSize bufferSize); 

 

 

        /// <summary> 

        /// ?????????? ?????? ?????? 

        /// true - ????? 

        /// false - ?? ????? 

        /// </summary> 

        bool Green 


        { 

            get; 

            set; 

        } 

 

 

        /// <summary> 

        /// ???????? ?????????? ??????? ?????? 

        /// true - ????? 

        /// false - ?? ????? 

        /// </summary> 

        bool Red 

        { 

            get; 

            set; 

        } 

 

 

        /// <summary> 

        /// ????? ?????????????? ????????? ???? 

        /// </summary> 

        void RestoreLamps(); 

 

 

        /// <summary> 

        /// ??????? ?? ?????? ???????? ????? 

        /// </summary> 

        bool DoubleSheetSensorEnabled 

        { 

            get; 

            set; 

        } 

 

 

        /// <summary> 

        /// ??????? ???????? ??????? ???????? ?????. ?????????? 0, ???? ?????? ?? ???????? (??? ???????????) 

        /// </summary> 

        short DoubleSheetSensorCurrentValue 

        { 

            get; 

        } 

 

 

        /// <summary> 

        /// ??????? ???????? ?????? ? ??????? ???????? ???????? ?????. ????? 0, ???? ?????? ?? ???????? (??? ???????????) 

        /// </summary> 

        /// <param name="l">???????? ??????</param> 

        /// <param name="r">???????? ???????</param> 

        void GetDoubleSheetSensorCurrentValue(out short l, out short r); 

 


 
        /// <summary> 

        /// ?????? ??????????? ???????? ????? 

        /// </summary> 

        /// <param name="l">????? ??????</param> 

        /// <param name="r">????? ???????</param> 

        void GetDoubleSheetSensorLevel(out short l, out short r); 

 

 

        /// <summary> 

        /// ?????? ??????????? ???????? ????? 

        /// </summary> 

        /// <param name="l">????? ??????</param> 

        /// <param name="r">????? ???????</param> 

        void SetDoubleSheetSensorLevel(short l, short r); 

 

 

		/// <summary> 

        /// ?????? ??????????? ???????? ????? ??? ??????? ????????? 

        /// </summary> 

        /// <param name="nLeftSensorLevel">????? ??????</param> 

        /// <param name="nRightSensorLevel">????? ???????</param> 

        void SetDoubleSheetSensorCurrentSheetLevel(short nLeftSensorLevel, short nRightSensorLevel); 

 

 

		/// <summary> 

        /// ????????? ?????? ???????? ???????? ????? 

        /// </summary> 

        /// <param name="leftWork">??????? ?????? ?????? ???????</param> 

        /// <param name="rightWork">??????? ?????? ??????? ???????</param> 

        void CheckDoubleSheetSensor(out bool leftWork, out bool rightWork); 

 

 

        /// <summary> 

        /// ???????? ????????? ???????? TRUE, ????? ? ?????? ???????? ?????????.  

        /// ????? ????, ??? ????????? ??????? ??????, ???????? ????????? ???????? FALSE. 

        /// </summary> 

        bool ScannerBusy 

        { 

            get; 

        } 

    } 

}


