using System; 

using Croc.Bpc.Election.Voting; 

 

 

namespace Croc.Bpc.Printing.Reports 

{ 

    /// <summary> 

    /// ?????? ??????  

    ///     ??? ?????????? ???????? ???? ?????? 

    ///     ??? ?????? ????? ?????, ?? ?????????? ???????? 

    /// </summary> 

    public class ReportLine : IReportElement 

    { 

        /// <summary> 

        /// ??????? ????, ??? ??????? ????????? ?? ?????? 

        /// </summary> 

        public bool IsPrintable 

        { 

            get { return true; } 

        } 

 

 

        /// <summary> 

        /// ???????? ?????? (??????) 

        /// ???? ??? ?????? Table - ?? ?????? ???????, ????? - ???? ?????? 

        /// </summary> 

        private string[] m_aLines; 

 

 

 

 

        /// <summary> 

        /// ?????? 

        /// </summary> 

        public string FirstLine 

        { 

            get 

            { 

                if (m_aLines == null || m_aLines[0] == null) 

                { 

                    return " "; 

                } 

                else 

                { 

                    return m_aLines[0]; 

                } 

            } 

        } 

 

 


        /// <summary> 

        /// ?????? ???? ????? 

        /// </summary> 

        public string[] Lines 

        { 

            get 

            { 

                return m_aLines; 

            } 

        } 

 

 

        /// <summary> 

        /// ?????? ????? 

        /// </summary> 

        public bool Bold { get; set; } 

 

 

        /// <summary> 

        /// ?????? 

        /// </summary> 

        public bool Italic { get; set; } 

 

 

        /// <summary> 

        /// ?????? ?????? 

        /// </summary> 

        public int FontSize { get; set; } 

 

 

        /// <summary> 

        /// ??????? ?????? ?? ????? ???????? (?????? ??? ??????) 

        /// </summary> 

        public bool NewPage { get; set; } 

 

 

        /// <summary> 

        /// ???????????? ?????? 

        /// </summary> 

        public LineAlign Align { get; set; } 

 

 

        /// <summary> 

        /// ??????????? 

        /// </summary> 

        /// <param name="lines">????? ????? (?? ?????????? ????????)</param> 

        /// <param name="nAlign">????????????</param> 

        /// <param name="nFontSize">?????? ??????</param> 

        /// <param name="bold">?????? ?????</param> 

        /// <param name="italic">??????</param> 


        public ReportLine(string[] lines, LineAlign nAlign, int nFontSize, bool bold, bool italic, bool newPage) 

        { 

            // ?????? 

            m_aLines = lines; 

            // ???????????? 

            Align = nAlign; 

            // ?????? ?????? 

            FontSize = nFontSize; 

            // ?????? ????? 

            Bold = bold; 

            // ?????? 

            Italic = italic; 

            // ??????? ?????? ?? ????? ???????? 

            NewPage = newPage; 

        } 

 

 

        /// <summary> 

        /// ??????? ????????????? 

        /// </summary> 

        /// <param name="str">??????? ??????</param> 

        /// <returns>????????????????? ??????</returns> 

        public delegate string DoTransform(string str); 

 

 

        /// <summary> 

        /// ????????? ????????????????? ????? 

        /// </summary> 

        /// <param name="transform">????? ?????????????</param> 

        public void TransformLine(DoTransform transform) 

        { 

            for (int i = 0; i < m_aLines.Length; i++) 

            { 

                m_aLines[i] = transform(m_aLines[i]); 

            } 

        } 

    } 

}


