using System; 

using System.IO; 

using System.Runtime.InteropServices; 

 

 

namespace Croc.Bpc.GsScannerDriver.SIB2010 

{ 

	/// <summary> 

	/// ????????? ????????? ???????. 

	/// </summary> 

	[StructLayout(LayoutKind.Sequential)] 

    public struct ManufProps : IManufProps 

	{ 

		/// <summary> 

		/// ???????? ????? ??????? 

		/// </summary> 

		public int		common_serial_number; 

 

 

		/// <summary> 

		/// ??????? ???????  

		/// </summary> 

        public short    lamps; 

 

 

		/// <summary> 

        /// ??????? ?????? ??? 

        /// </summary> 

        public short    adc_line_b; 

 

 

		/// <summary> 

        /// ??????????? ???????? ??? 

        /// </summary> 

        public short    adc_line_w; 

 

 

		/// <summary> 

		/// ????? ??????????? 

		/// </summary> 

        public short    common_bg_bin_th; 

 

 

		/// <summary> 

		/// DPI ?? ??? X 

		/// </summary> 

        public short    common_dpi_x; 

 

 

		/// <summary> 


		/// DPI ?? ??? Y 

		/// </summary> 

		public short	common_dpi_y; 

 

 

		/// <summary> 

		/// ?????????? ????? ??? ??????????? ??????? ????? 

		/// </summary> 

		public short	ActivePoints; 

 

 

		/// <summary> 

		/// ????? ??? ??????????? ??????? ????? 

		/// </summary> 

		public short	Porog; 

 

 

		/// <summary> 

		/// ????? ???? ??????? ??? ???????????? 

		/// </summary> 

        public short    speedMotor; 

 

 

		/// <summary> 

		/// ????? ??????? ??? ??????????? ???????????, % 

		/// </summary> 

		public short	percentForDirt; 

 

 

		/// <summary> 

		/// ?????????? ????? ??? ??????????? ??????????? 

		/// </summary> 

		public short	linesForDirt;  

 

 

		/// <summary> 

		/// ????? ??????????? ???????? ????? 

		/// </summary> 

        [MarshalAs(UnmanagedType.ByValArray, SizeConst = 2)] 

        public short[]  levelList; 

 

 

        /// <summary> 

        /// ????? ??????????? ???????? ????? 

        /// </summary> 

        [MarshalAs(UnmanagedType.ByValArray, SizeConst = 2)] 

        public short[]  levelDoubleList; 

 

 

        /// <summary> 


		/// ????????? ??????????? ???????? ????? 

		/// </summary> 

		public short	doubleSheetParam; 

 

 

		/// <summary> 

        /// ?????????? ?? ??? ?? CIS 

        /// </summary> 

	    public short    shiftLine; 

 

 

		/// <summary> 

		/// ????????? ????????? ??????? 

		/// </summary> 

		/// <param name="data">?????????? ?? ????????? ???????? ??????</param> 

		public ManufProps( byte[] data ) 

		{ 

			BinaryReader br = new System.IO.BinaryReader( new MemoryStream( data ) ); 

			common_serial_number = br.ReadInt32(); 

            lamps = br.ReadInt16(); 

            adc_line_b = br.ReadInt16(); 

            adc_line_w = br.ReadInt16(); 

            common_bg_bin_th = br.ReadInt16(); 

			common_dpi_x = br.ReadInt16(); 

			common_dpi_y = br.ReadInt16(); 

			ActivePoints = br.ReadInt16(); 

			Porog = br.ReadInt16(); 

			speedMotor = br.ReadInt16(); 

			percentForDirt = br.ReadInt16(); 

			linesForDirt = br.ReadInt16(); 

            levelList = new short[2]; 

            for (int i = 0; i < levelList.Length; i++) 

            { 

                levelList[i] = br.ReadInt16(); 

            } 

            levelDoubleList = new short[2]; 

            for (int i = 0; i < levelDoubleList.Length; i++) 

            { 

                levelDoubleList[i] = br.ReadInt16(); 

            } 

			doubleSheetParam = br.ReadInt16(); 

		    shiftLine = br.ReadInt16(); 

		} 

 

 

        /// <inheritdoc/> 

	    public int SerialNumber 

	    { 

	        get { return common_serial_number; } 

	    } 


 
 

        /// <inheritdoc/> 

	    public short ShiftLines 

	    { 

	        get { return 0; } 

	    } 

	} 

}


