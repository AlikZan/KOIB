using System; 

using System.Diagnostics; 

using Croc.Core.Diagnostics; 

using Croc.Core.Configuration; 

 

 

namespace Croc.Core 

{ 

    /// <summary> 

    /// ?????????, ??????? ?????? ????????????? ??? ?????????? 

    /// </summary> 

    public interface ISubsystem : IDisposable 

    { 

        /// <summary> 

        /// ??????????, ? ??????? ?????? ?????????? 

        /// </summary> 

        ICoreApplication Application { get; set; } 

 

 

        /// <summary> 

        /// ????????????? ?????????? 

        /// </summary> 

        /// <param name="config"></param> 

        void Init(SubsystemConfig config); 

 

 

        /// <summary> 

        /// ????????? ????? ???????????? ?????????? 

        /// </summary> 

        /// <param name="newConfig">????? ??????-??????? ? ??????????? ??????????</param> 

        void ApplyNewConfig(SubsystemConfig newConfig); 

 

 

		/// <summary> 

		/// ??????? ????????? ???????????? ?????????? 

		/// </summary> 

		event EventHandler<ConfigUpdatedEventArgs> ConfigUpdated; 

 

 

        /// <summary> 

        /// ??? ?????????? 

        /// </summary> 

        string Name { get; } 

 

 

        #region ??????????? 

 

 

        /// <summary> 

        /// ??????? ??????????? ?????????? 


        /// </summary> 

        TraceLevel TraceLevel { get; } 

 

 

        /// <summary> 

        /// ?????, ? ??????? ????? ??????????? ???-????? ?????????? 

        /// </summary> 

        string LogFileFolder { get; } 

 

 

        /// <summary> 

        /// ??????? ????????????? ?????? ???? ? ????????? ???? 

        /// </summary> 

        bool SeparateLog 

        { 

            get; 

            set; 

        } 

 

 

        /// <summary> 

        /// ?????? ?????????? 

        /// </summary> 

        ILogger Logger { get; } 

 

 

        /// <summary> 

        /// ??????????? ?????? ?????????? 

        /// </summary> 

        void DisposeLogger(); 

 

 

        #endregion 

    } 

}


