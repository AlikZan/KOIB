using System; 

using System.Linq; 

using Croc.Core.Utils; 

using Croc.Core.Utils.Text; 

using System.Diagnostics; 

using System.Threading; 

 

 

namespace Croc.Core.Diagnostics 

{ 

	/// <summary> 

	/// ????? ??????????? ??????? ??? ??????????? 

	/// </summary> 

	public static class LoggingUtils 

	{ 

		/// <summary> 

		/// ????????? ? ?????????? ????????? ???????? ? ??????????? ? ??????? ????????? ??????????. 

		/// </summary> 

		/// <param name="properties">?????????</param> 

        public static void FillCommonContextProperies(EventProperties properties) 

		{ 

            properties[LoggerEvent.TIMESTAMP_PROPERTY] = DateTime.Now; 

            properties[LoggerEvent.THREAD_ID] = Thread.CurrentThread.ManagedThreadId; 

		} 

 

 

		/// <summary> 

		/// ??????????? ????????? ?????????? ? ???? ??????. 

		/// </summary> 

		/// <param name="properties">????????? ??????????.</param> 

		/// <returns></returns> 

        public static TextBuilder Format(EventProperties properties) 

		{ 

			var textBuilder = new TextBuilder(); 

			Format(textBuilder, properties); 

			return textBuilder; 

		} 

 

 

		/// <summary> 

		/// ??????????? ????????? ?????????? ? ???? ??????. 

		/// </summary> 

		/// <param name="textBuilder"></param> 

		/// <param name="properties">????????? ??????????.</param> 

        public static void Format(TextBuilder textBuilder, EventProperties properties) 

		{ 

			if (properties.ContainsKey(String.Empty)) 

				textBuilder.Append("EventData"); 

			ObjectDumper.DumpObject( 

				properties.OrderBy(pair => pair.Key), 


				textBuilder); 

		} 

 

 

		/// <summary> 

		/// ????????? ??????????? 

		/// </summary> 

		/// <param name="textBuilder"></param> 

		public static void AddSeparator(TextBuilder textBuilder) 

		{ 

			textBuilder 

				.EmptyLine() 

				.Line("-------------------------------------------------------------------------------") 

				.EmptyLine(); 

		} 

	} 

}


